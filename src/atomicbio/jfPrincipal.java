/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package atomicbio;

import CIDBio.CIDBio;
import CIDBio.Template;
/**
 *
 * @author rodolfo.abreu
 */
public class jfPrincipal extends javax.swing.JFrame {

    /**
	 * 
	 */
    private static final long serialVersionUID = 1L;
    private static Template templateToVerify;
    private static Integer templateQualityToVerify;
    
    public static void setTemplate(Template template) {
        templateToVerify = template;
    }
    
    public static void setQuality(Integer quality) {
        templateQualityToVerify = quality;
    }
    /**
     * Creates new form jfPrincipal
     */
    public jfPrincipal() {
        initComponents();
        CIDBio idBio = new CIDBio();
        jLblModelValue.setText(idBio.GetDeviceInfo().getModel());
        jLblFirmValue.setText(idBio.GetDeviceInfo().getVersion());
        jLblSerialValue.setText(idBio.GetDeviceInfo().getSerialNumber());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnGetTemplate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTxtBioTemplate = new javax.swing.JTextArea();
        jBtnVerifyBio = new javax.swing.JButton();
        jLblStatus = new javax.swing.JLabel();
        jLblBio = new javax.swing.JLabel();
        jPnlLeitorInfo = new javax.swing.JPanel();
        jLblModelValue = new javax.swing.JLabel();
        jLblModel = new javax.swing.JLabel();
        jLblTitleSerial = new javax.swing.JLabel();
        jLblTitelFirmware = new javax.swing.JLabel();
        jLblFirmValue = new javax.swing.JLabel();
        jLblSerialValue = new javax.swing.JLabel();
        jPnlStatusBar = new javax.swing.JPanel();
        jLblStatusBar = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();
        jBtnManual = new javax.swing.JButton();
        jBtnSalvar = new javax.swing.JButton();
        jBtnVerificaBio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Atomiccodes - CadBio API");
        setAlwaysOnTop(true);
        setName("jfPrincipal"); // NOI18N
        setResizable(false);

        jBtnGetTemplate.setText("Gerar Template");
        jBtnGetTemplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGetTemplateActionPerformed(evt);
            }
        });

        jTxtBioTemplate.setColumns(20);
        jTxtBioTemplate.setLineWrap(true);
        jTxtBioTemplate.setRows(5);
        jScrollPane1.setViewportView(jTxtBioTemplate);

        jBtnVerifyBio.setText("Verificar Digital");
        jBtnVerifyBio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnVerifyBioActionPerformed(evt);
            }
        });

        jLblStatus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblStatus.setText("Cadastro Biométrico");

        jLblBio.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPnlLeitorInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Leitor Biometrico"));
        jPnlLeitorInfo.setName(""); // NOI18N

        jLblModelValue.setText("...");

        jLblModel.setText("Modelo:");

        jLblTitleSerial.setText("Serial Number:");

        jLblTitelFirmware.setText("Firmware:");

        jLblFirmValue.setText("...");

        jLblSerialValue.setText("...");

        javax.swing.GroupLayout jPnlLeitorInfoLayout = new javax.swing.GroupLayout(jPnlLeitorInfo);
        jPnlLeitorInfo.setLayout(jPnlLeitorInfoLayout);
        jPnlLeitorInfoLayout.setHorizontalGroup(
            jPnlLeitorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnlLeitorInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPnlLeitorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblModel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblTitleSerial, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblTitelFirmware, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPnlLeitorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLblModelValue, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                    .addComponent(jLblSerialValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLblFirmValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );
        jPnlLeitorInfoLayout.setVerticalGroup(
            jPnlLeitorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlLeitorInfoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPnlLeitorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblFirmValue, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblTitelFirmware))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPnlLeitorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblSerialValue)
                    .addComponent(jLblTitleSerial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPnlLeitorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblModelValue)
                    .addComponent(jLblModel))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPnlStatusBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLblStatusBar.setText("Sistema de Cadastro biométrico");
        jLblStatusBar.setToolTipText("");

        javax.swing.GroupLayout jPnlStatusBarLayout = new javax.swing.GroupLayout(jPnlStatusBar);
        jPnlStatusBar.setLayout(jPnlStatusBarLayout);
        jPnlStatusBarLayout.setHorizontalGroup(
            jPnlStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlStatusBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPnlStatusBarLayout.setVerticalGroup(
            jPnlStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlStatusBarLayout.createSequentialGroup()
                .addComponent(jLblStatusBar)
                .addGap(0, 6, Short.MAX_VALUE))
            .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jBtnManual.setText("Checar Manual");
        jBtnManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnManualActionPerformed(evt);
            }
        });

        jBtnSalvar.setText("Gravar Digital");
        jBtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalvarActionPerformed(evt);
            }
        });

        jBtnVerificaBio.setText("Verificar");
        jBtnVerificaBio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnVerificaBioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtnGetTemplate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnVerifyBio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnManual))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPnlLeitorInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnVerificaBio))
                    .addComponent(jLblBio, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 45, Short.MAX_VALUE))
            .addComponent(jPnlStatusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLblBio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPnlLeitorInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnGetTemplate)
                    .addComponent(jBtnVerifyBio)
                    .addComponent(jBtnManual)
                    .addComponent(jBtnSalvar)
                    .addComponent(jBtnVerificaBio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPnlStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jBtnGetTemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGetTemplateActionPerformed
        // TODO add your handling code here:
        jProgressBar.setIndeterminate(true);
        System.out.println(templateToVerify);
        AtomicBioReader atomicBioReader = new AtomicBioReader(
                jLblBio, 
                jTxtBioTemplate, 
                jLblStatusBar, 
                templateToVerify,
                jProgressBar
        );
        
        Thread readBio = new Thread(atomicBioReader);
        readBio.start();
        
        jLblStatusBar.setText("Biometria Capturada");
    }//GEN-LAST:event_jBtnGetTemplateActionPerformed

    private void jBtnVerifyBioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnVerifyBioActionPerformed
        // TODO add your handling code here:
        jLblStatusBar.setText("Iniciando Leitor Biométiroc");
        jProgressBar.setIndeterminate(true);
        AtomicBioReader atomicBioReader = new AtomicBioReader(
                jLblBio, 
                jTxtBioTemplate, 
                jLblStatusBar, 
                templateToVerify,
                jProgressBar,
                true
        );
        
        Thread readBioAndMatch = new Thread(atomicBioReader);
        readBioAndMatch.start();

    }//GEN-LAST:event_jBtnVerifyBioActionPerformed

    private void jBtnManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnManualActionPerformed
        // TODO add your handling code here:
        int quality = 100;
        String template = jTxtBioTemplate.getText();
        
        Template template2 = new Template(template, quality);
        templateToVerify = template2;
        
        jLblStatusBar.setText("Iniciando Leitor Biométiroc");
        jProgressBar.setIndeterminate(true);
        AtomicBioReader atomicBioReader = new AtomicBioReader(
                jLblBio, 
                jTxtBioTemplate, 
                jLblStatusBar, 
                templateToVerify,
                jProgressBar,
                true
        );
        
        Thread readBioAndMatch = new Thread(atomicBioReader);
        readBioAndMatch.start();
    }//GEN-LAST:event_jBtnManualActionPerformed

    private void jBtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalvarActionPerformed
        // TODO add your handling code here:
        jLblStatusBar.setText("Iniciando Leitor Biométiroc");
        AtomicBioReader atomicBioReader = new AtomicBioReader(
                jLblBio, 
                jTxtBioTemplate, 
                jLblStatusBar, 
                templateToVerify,
                jProgressBar
        );
        jProgressBar.setIndeterminate(true);
        
        Thread writeBioReader = new Thread() {
            @Override
            public void run() {
                atomicBioReader.WriteBio();
            }
        };
        writeBioReader.start();
    }//GEN-LAST:event_jBtnSalvarActionPerformed

    private void jBtnVerificaBioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnVerificaBioActionPerformed
        // TODO add your handling code here:
        jLblStatusBar.setText("Iniciando Leitor Biométiroc");
        AtomicBioReader atomicBioReader = new AtomicBioReader(
                jLblBio, 
                jTxtBioTemplate, 
                jLblStatusBar, 
                templateToVerify,
                jProgressBar
        );
        jProgressBar.setIndeterminate(true);
        
        Thread writeBioReader = new Thread() {
            @Override
            public void run() {
                atomicBioReader.ChebioId();
            }
        };
        writeBioReader.start();
    }//GEN-LAST:event_jBtnVerificaBioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnGetTemplate;
    private javax.swing.JButton jBtnManual;
    private javax.swing.JButton jBtnSalvar;
    private javax.swing.JButton jBtnVerificaBio;
    private javax.swing.JButton jBtnVerifyBio;
    public static javax.swing.JLabel jLblBio;
    private javax.swing.JLabel jLblFirmValue;
    private javax.swing.JLabel jLblModel;
    private javax.swing.JLabel jLblModelValue;
    private javax.swing.JLabel jLblSerialValue;
    private javax.swing.JLabel jLblStatus;
    private javax.swing.JLabel jLblStatusBar;
    private javax.swing.JLabel jLblTitelFirmware;
    private javax.swing.JLabel jLblTitleSerial;
    private javax.swing.JPanel jPnlLeitorInfo;
    private javax.swing.JPanel jPnlStatusBar;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea jTxtBioTemplate;
    // End of variables declaration//GEN-END:variables
}
